{"version":3,"file":"static/js/19.5b03feb2.chunk.js","mappings":"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","sources":["webpack://samurai-way/./src/components/Dialogs/Dialogs.module.css?1b2e","webpack://samurai-way/./src/components/Dialogs/MessageDialogsItem/MessageDialogsItem.module.css?fba2","components/Dialogs/MessageDialogsItem/MessageDialogsItem.tsx","webpack://samurai-way/./src/components/Dialogs/UserDialogsItem/UserDialogsItem.module.css?0fca","components/Dialogs/UserDialogsItem/UserDialogsItem.tsx","components/Dialogs/Dialogs.tsx","components/Dialogs/DialogsContainer.tsx","hoc/withAuthRedirect.tsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"wrapper\":\"Dialogs_wrapper__RJk5X\",\"user\":\"Dialogs_user__N7zLN\",\"chat__list\":\"Dialogs_chat__list__dhZa0\",\"form\":\"Dialogs_form__NLPd7\",\"btn__box\":\"Dialogs_btn__box__nEAdj\",\"file_attachment_btn\":\"Dialogs_file_attachment_btn__iWcZp\",\"emoji_btn\":\"Dialogs_emoji_btn__apWdJ\",\"form__control\":\"Dialogs_form__control__wgXwO\",\"send__btn\":\"Dialogs_send__btn__DIjcW\"};","// extracted by mini-css-extract-plugin\nexport default {\"chat\":\"MessageDialogsItem_chat__8uC7k\",\"chat__avatar\":\"MessageDialogsItem_chat__avatar__w76hq\",\"chat__body\":\"MessageDialogsItem_chat__body__gTjvJ\",\"chat__message\":\"MessageDialogsItem_chat__message__wAxp5\",\"chat__left\":\"MessageDialogsItem_chat__left__aYdYk\"};","import classes from \"./MessageDialogsItem.module.css\";\r\nimport React from \"react\";\r\n\r\nexport type MessagePropsType = {\r\n  src: string,\r\n  message: string,\r\n  message_time: string,\r\n  id: string,\r\n}\r\nexport const MessageDialogsItem = (props: MessagePropsType) => {\r\n  return (\r\n    <div className={classes.chat}>\r\n      <div className={classes.chat__avatar}>\r\n        <a href=\"/\">\r\n          <img\r\n            src={props.src}\r\n            alt=\"img\"/>\r\n        </a>\r\n      </div>\r\n      <div className={classes.chat__body}>\r\n        <div className={classes.chat__message}>\r\n          <p>{props.message}</p>\r\n          <span>{props.message_time}</span>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}","// extracted by mini-css-extract-plugin\nexport default {\"user__item\":\"UserDialogsItem_user__item__pCp9Q\",\"user__avatar\":\"UserDialogsItem_user__avatar__tWTEQ\"};","import classes from \"./UserDialogsItem.module.css\"\r\nimport {NavLink} from \"react-router-dom\";\r\nimport React from \"react\";\r\n\r\nexport type UserItemPropsType = {\r\n  src: string,\r\n  name: string,\r\n  id: string,\r\n}\r\nexport const UserDialogsItem = (props: UserItemPropsType) => {\r\n  return (\r\n    <li className={classes.user__item}><NavLink to={\"/dialogs/\" + props.id}>\r\n      <img className={classes.user__avatar}\r\n           src={props.src}\r\n           alt=\"img\"/>\r\n    </NavLink>{props.name}</li>\r\n  )\r\n}","import React, {useEffect} from 'react';\r\nimport classes from './Dialogs.module.css';\r\nimport {MessageDialogsItem, MessagePropsType} from './MessageDialogsItem/MessageDialogsItem';\r\nimport {UserDialogsItem, UserItemPropsType} from './UserDialogsItem/UserDialogsItem';\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {useDispatch} from \"react-redux\";\r\nimport {setMessageTC} from \"../../Redux/dialogsPageReducer\";\r\n\r\ntype DialogsPropsType = {\r\n  UserDialogsItems: Array<UserItemPropsType>\r\n  MessageDialogsItems: Array<MessagePropsType>\r\n  addMessage: (message: string) => void\r\n  id: number\r\n}\r\n\r\nconst Dialogs = (props: DialogsPropsType) => {\r\n  const dispatch = useDispatch()\r\n  useEffect(() => {\r\n    dispatch(setMessageTC())\r\n  }, [dispatch, props])\r\n  const onSubmit = (values: any) => {\r\n    console.log(values)\r\n    props.addMessage(values.message)\r\n  }\r\n  let MessageDialogsItemsData = props.MessageDialogsItems.map((m) => <MessageDialogsItem\r\n    src={m.src} message={m.message} message_time={m.message_time}\r\n    id={m.id} key={m.id}/>)\r\n  return (\r\n    <>\r\n      <ul className={classes.user}>\r\n        {props.UserDialogsItems.map((u) => <UserDialogsItem\r\n          src={u.src}\r\n          name={u.name} id={u.id} key={u.id}/>)}\r\n      </ul>\r\n      {MessageDialogsItemsData}\r\n      <div className={classes.chat__list}>\r\n        < AddMessageInDialogsFormRedux onSubmit={onSubmit}/>\r\n      </div>\r\n    </>\r\n  )\r\n}\r\nconst AddMessageInDialogs = (props: any) => {\r\n  return (\r\n    <form onSubmit={props.handleSubmit} className={classes.form}>\r\n      <div className={classes.btn__box}>\r\n        <button className={classes.file_attachment_btn}>\r\n          <svg xmlns=\"http://www.w3.org/2000/svg\" id=\"Outline\" viewBox=\"0 0 24 24\" width=\"20\" height=\"20\"\r\n               fill='#6B7C8F'>\r\n            <path\r\n              d=\"M22.95,9.6a1,1,0,0,0-1.414,0L10.644,20.539a5,5,0,1,1-7.072-7.071L14.121,2.876a3,3,0,0,1,4.243,4.242L7.815,17.71a1.022,1.022,0,0,1-1.414,0,1,1,0,0,1,0-1.414l9.392-9.435a1,1,0,0,0-1.414-1.414L4.987,14.882a3,3,0,0,0,0,4.243,3.073,3.073,0,0,0,4.243,0L19.778,8.532a5,5,0,0,0-7.071-7.07L2.158,12.054a7,7,0,0,0,9.9,9.9L22.95,11.018A1,1,0,0,0,22.95,9.6Z\"/>\r\n          </svg>\r\n        </button>\r\n        <button className={classes.emoji_btn}>\r\n          <svg xmlns=\"http://www.w3.org/2000/svg\" id=\"Layer_1\" data-name=\"Layer 1\" viewBox=\"0 0 24 24\" width=\"20\"\r\n               height=\"20\" fill='#6B7C8F'>\r\n            <path\r\n              d=\"M12,24A12,12,0,1,1,24,12,12.013,12.013,0,0,1,12,24ZM12,2A10,10,0,1,0,22,12,10.011,10.011,0,0,0,12,2Zm5.666,13.746a1,1,0,0,0-1.33-1.494A7.508,7.508,0,0,1,12,16a7.509,7.509,0,0,1-4.334-1.746,1,1,0,0,0-1.332,1.492A9.454,9.454,0,0,0,12,18,9.454,9.454,0,0,0,17.666,15.746ZM6,10c0,1,.895,1,2,1s2,0,2-1a2,2,0,0,0-4,0Zm8,0c0,1,.895,1,2,1s2,0,2-1a2,2,0,0,0-4,0Z\"/>\r\n          </svg>\r\n        </button>\r\n      </div>\r\n      <Field name=\"message\" placeholder=\"Type your message...\" component=\"input\" type=\"text\"\r\n             className={classes.form__control}/>\r\n      <button className={classes.send__btn}>Send</button>\r\n    </form>\r\n  )\r\n}\r\nconst AddMessageInDialogsFormRedux = reduxForm({form: 'addMessageInPost'})(AddMessageInDialogs);\r\nexport default Dialogs;","import Dialogs from \"./Dialogs\";\r\nimport React from \"react\";\r\nimport {\r\n  addMessageActionCreator,\r\n  MessageDialogsItemType,\r\n  UserDialogsItemType\r\n} from \"../../Redux/dialogsPageReducer\";\r\nimport {connect} from \"react-redux\";\r\nimport {AppStateType} from \"../../Redux/redux-store\";\r\nimport {compose, Dispatch} from \"redux\";\r\nimport {withAuthRedirect} from \"../../hoc/withAuthRedirect\";\r\n\r\ntype mapStateToPropsType = {\r\n  UserDialogsItems: Array<UserDialogsItemType>\r\n  MessageDialogsItems: Array<MessageDialogsItemType>\r\n  id: number\r\n}\r\ntype mapDispatchToPropsType = {\r\n  addMessage: (message: string) => void\r\n}\r\nconst mapStateToProps = (state: AppStateType): mapStateToPropsType => {\r\n  return {\r\n    UserDialogsItems: state.MessagePage.UserDialogsItems,\r\n    MessageDialogsItems: state.MessagePage.MessageDialogsItems,\r\n    id: state.Authorization.id\r\n  }\r\n}\r\nconst mapDispatchToProps = (dispatch: Dispatch): mapDispatchToPropsType => {\r\n  return {\r\n    addMessage: (message: string) => {\r\n      dispatch(addMessageActionCreator(message))\r\n    },\r\n\r\n\r\n  }\r\n}\r\nexport default compose<React.ComponentType>(\r\n  connect(mapStateToProps, mapDispatchToProps),\r\n  withAuthRedirect\r\n)(Dialogs)","import React from \"react\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport {AppStateType} from \"../Redux/redux-store\";\r\nimport {connect} from \"react-redux\";\r\n\r\ntype MapStateToPropsType = {\r\n  auth: boolean\r\n}\r\nconst mapStateToProps = (state: AppStateType): MapStateToPropsType => {\r\n  return {\r\n    auth: state.Authorization.isAuth\r\n  }\r\n}\r\nexport const withAuthRedirect = (Component: any) => {\r\n  const RedirectComponent = (props: MapStateToPropsType) => {\r\n    if (!props.auth) return <Redirect to={'/login'}/>\r\n    return <Component {...props}/>\r\n  }\r\n  return connect(mapStateToProps)(RedirectComponent)\r\n}"],"names":["MessageDialogsItem","props","className","classes","href","src","alt","message","message_time","UserDialogsItem","to","id","name","AddMessageInDialogsFormRedux","reduxForm","form","onSubmit","handleSubmit","xmlns","viewBox","width","height","fill","d","Field","placeholder","component","type","dispatch","useDispatch","useEffect","setMessageTC","MessageDialogsItemsData","MessageDialogsItems","map","m","UserDialogsItems","u","values","console","log","addMessage","compose","connect","state","MessagePage","Authorization","addMessageActionCreator","withAuthRedirect","Dialogs","mapStateToProps","auth","isAuth","Component"],"sourceRoot":""}