{"version":3,"file":"static/js/797.ea8face0.chunk.js","mappings":"0NACA,GAAgB,IAAM,qBAAqB,KAAO,sBAAsB,eAAiB,gCAAgC,KAAO,sBAAsB,KAAO,sBAAsB,iBAAmB,kCAAkC,cAAgB,+BAA+B,KAAO,sBAAsB,WAAa,4BAA4B,YAAc,6BAA6B,UAAY,2BAA2B,aAAe,8BAA8B,WAAa,4BAA4B,aAAe,+B,UCAphB,GAAgB,KAAO,yBAAyB,eAAiB,mCAAmC,KAAO,yBAAyB,KAAO,yBAAyB,iBAAmB,qCAAqC,cAAgB,kCAAkC,KAAO,yBAAyB,WAAa,+BAA+B,YAAc,gCAAgC,UAAY,8BAA8B,aAAe,kC,UCAjc,GAAgB,MAAQ,4BAA4B,cAAgB,oCAAoC,eAAiB,qCAAqC,cAAgB,oCAAoC,aAAe,mCAAmC,KAAO,2BAA2B,SAAW,+BAA+B,oBAAsB,0CAA0C,UAAY,gCAAgC,cAAgB,oCAAoC,UAAY,gCAAgC,MAAQ,6B,mBCUvhBA,EAAe,SAACC,GAC3B,OAA0BC,EAAAA,EAAAA,UAAiB,IAA3C,eAAOC,EAAP,KAAcC,EAAd,KACMC,GAAWC,EAAAA,EAAAA,MAWjB,OACE,gBAAKC,UAAWC,EAAAA,UAAhB,UACE,gBAAKC,GAAG,YAAYF,UAAWC,EAAAA,MAA/B,UACE,gBAAKD,UAAWC,EAAAA,cAAhB,UACE,iBAAKD,UAAWC,EAAAA,eAAhB,WACE,iBAAKD,UAAWC,EAAAA,cAAhB,WACE,eAAID,UAAWC,EAAAA,aAAf,iCACA,SAAC,KAAD,CAASE,QAjBW,WAC9BT,EAAMU,cAgB+CC,GAAG,WAAWC,MAAM,QACtDN,UAAWC,EAAAA,MADpB,sBAGF,kBAAMD,UAAWC,EAAAA,KAAjB,WACE,qBAAUM,SAlBE,SAACC,GACvBX,EAASW,EAAEC,cAAcb,QAiBsBA,MAAOA,EAAOI,UAAWC,EAAAA,cACpDS,YAAY,0BACtB,iBAAKV,UAAWC,EAAAA,SAAhB,WACE,mBAAQD,UAAWC,EAAAA,oBAA6BU,KAAK,SAArD,UACE,gBAAKC,MAAM,6BAA6BV,GAAG,UAAUW,QAAQ,YAAYC,MAAM,KAAKC,OAAO,KACtFC,KAAK,UADV,UAEE,iBACEC,EAAE,mWAGR,mBAAQjB,UAAWC,EAAAA,UAAmBU,KAAK,SAA3C,UACE,gBAAKC,MAAM,6BAA6BV,GAAG,UAAU,YAAU,UAAUW,QAAQ,YAC5EC,MAAM,KACNC,OAAO,KAAKC,KAAK,UAFtB,UAGE,iBACEC,EAAE,0WAGR,mBAAQjB,UAAWC,EAAAA,UAAmBE,QAAS,kBAjCrCD,EAiC0DR,EAAMQ,GAhCtFJ,GAASoB,EAAAA,EAAAA,IAAahB,EAAIN,SAC1BuB,QAAQC,IAAIlB,EAAIN,GAFK,IAACM,GAiCV,kCCyDhB,EA3FmB,SAACR,GAClB,OAAoCC,EAAAA,EAAAA,WAAkB,GAAtD,eAAO0B,EAAP,KAAmBC,EAAnB,KACA,GAAkC3B,EAAAA,EAAAA,WAAkB,GAApD,eAAO4B,EAAP,KAAkBC,EAAlB,MACAC,EAAAA,EAAAA,YAAU,WACR,IAAIC,EAA4BC,YAAW,WACzCL,GAAc,KAPN,KAUV,OAAO,kBAAMM,aAAaF,MACzB,CAACL,IAeJ,OACE,gCACGE,IAAa,SAAC9B,EAAD,CAAcW,WARb,WACjBoB,GAAcD,IAOwCrB,GAAIR,EAAMQ,MAC9D,iBAAKF,UAAWC,EAAAA,KAAhB,WACE,iBAAKD,UAAWC,EAAAA,eAAhB,WACE,SAAC,KAAD,CAASI,GAAG,IAAZ,UACE,gBAAKwB,IAAI,sFACJC,IAAI,cAEX,gBAAK9B,UAAWC,EAAAA,KAAhB,UACE,SAAC,KAAD,CAASD,UAAWC,EAAAA,KAAcI,GAAG,IAArC,UACE,gBAAKU,OAAO,KAAKF,QAAQ,YAAYC,MAAM,KACtCF,MAAM,6BACNI,KAAK,OAFV,UAGE,iBACEC,EAAE,oZAKZ,iBAAKjB,UAAWC,EAAAA,iBAAhB,WACE,iBAAKD,UAAWC,EAAAA,cAAhB,WACE,SAAC,KAAD,CAASI,GAAE,kBAAaX,EAAMQ,IAA9B,UACE,gBACE2B,IAAKnC,EAAMqC,YAAYC,MAAQtC,EAAMqC,YAAYC,MAAQ,mFACzDF,IAAI,gBAER,iBAAK9B,UAAWC,EAAAA,KAAhB,WACE,yBAAI,SAAC,KAAD,CAASI,GAAG,IAAZ,SAAiBX,EAAMuC,eAC3B,uDAGJ,gBAAIjC,UAAWC,EAAAA,WAAf,WACE,yBACE,UAAC,KAAD,CAASI,GAAG,IAAZ,WACE,iBAAML,UAAWC,EAAAA,YAAjB,kBACA,iBAAMD,UAAWC,EAAAA,UAAjB,yBAGJ,yBACE,UAAC,KAAD,CAASI,GAAG,IAAZ,WACE,iBAAML,UAAWC,EAAAA,YAAjB,iBACA,iBAAMD,UAAWC,EAAAA,UAAjB,6BAGJ,yBACE,UAAC,KAAD,CAASI,GAAG,IAAZ,WACE,iBAAML,UAAWC,EAAAA,YAAjB,kBACA,iBAAMD,UAAWC,EAAAA,UAAjB,gCAIN,iBAAKD,UAAWC,EAAAA,aAAhB,WACE,gBAAKD,UAAWC,EAAAA,eAAhB,SACGP,EAAMwC,UACL,mBAAQC,SAAUd,EAAYlB,QAjEZ,WAC9BmB,GAAc,GACd5B,EAAM0C,UAAU1C,EAAMQ,KA+DsDS,KAAK,SAArE,4BACA,mBAAQwB,SAAUd,EAAYlB,QAtEZ,WAC9BmB,GAAc,GACd5B,EAAM2C,UAAU3C,EAAMQ,KAoEsDS,KAAK,SAArE,2BAEJ,gBAAKX,UAAWC,EAAAA,iBAAhB,UACE,mBAAQE,QA9DK,WACvBqB,GAAcD,IA6D+BZ,KAAK,SAAxC,yC,UC7FD2B,EAAkB,SAAC5C,GAC9B,IAAI6C,EAAaC,KAAKC,KAAK/C,EAAMgD,eAAiBhD,EAAMiD,UAMlDC,EAAqB,SAACC,EAAcF,GACxCjD,EAAMoD,cAAcD,EAAMF,IAE5B,OACE,SAAC,IAAD,CAAYI,gBAAiB,GAAIC,gBAAiB,CAAC,GAAI,GAAI,GAAI,IACnDzC,SAAU,SAACsC,EAAMF,GAAP,OAAoBC,EAAmBC,EAAMF,IACvDM,eAAgB,EAChBC,MAAOX,EAAYY,iBAAkB,SAACC,EAASC,GAAV,OAAmBT,EAAmBQ,EAASC,OCF7F,SAASC,EAAQ5D,GACtB,IAAI6D,EAAQ7D,EAAM8D,YAAYC,KAAI,SAAAC,GAAI,OAAI,SAAC,EAAD,CAA0BrB,UAAW3C,EAAM2C,UAC/BD,UAAW1C,EAAM0C,UACjBL,YAAa2B,EAAKC,OAClB1B,UAAWyB,EAAKE,KAAM1D,GAAIwD,EAAKxD,GAC/BgC,SAAUwB,EAAKxB,UAJVwB,EAAKxD,OAKhE,OACE,iCACE,SAACoC,EAAD,CAAiBI,eAAgBhD,EAAMgD,eAAgBC,SAAUjD,EAAMiD,SACtDG,cAAepD,EAAMoD,cACrBe,kBAAmBnE,EAAMmE,qBAC1C,gBAAK7D,UAAWC,EAAAA,KAAhB,UACE,gBAAKD,UAAWC,EAAAA,IAAhB,SACGsD,S,kCChCEO,EAAiB,SAACC,GAC7B,OAAOA,EAAMC,YAAYR,aAEdS,EAAc,SAACF,GAC1B,OAAOA,EAAMC,YAAYrB,UAEduB,EAAuB,SAACH,GACnC,OAAOA,EAAMC,YAAYH,mBAEdM,EAAoB,SAACJ,GAChC,OAAOA,EAAMC,YAAYtB,gBAEd0B,EAAe,SAACL,GAC3B,OAAOA,EAAMC,YAAYK,WCuBrBC,EAAAA,SAAAA,IAAAA,EAAAA,EAAAA,GAAAA,EAAAA,GAAAA,IAAAA,GAAAA,EAAAA,EAAAA,GAAAA,GAAAA,SAAAA,IAAAA,IAAAA,GAAAA,EAAAA,EAAAA,GAAAA,KAAAA,GAAAA,IAAAA,IAAAA,EAAAA,UAAAA,OAAAA,EAAAA,IAAAA,MAAAA,GAAAA,EAAAA,EAAAA,EAAAA,EAAAA,IAAAA,EAAAA,GAAAA,UAAAA,GAQH,OARGA,EAAAA,EAAAA,KAAAA,MAAAA,EAAAA,CAAAA,MAAAA,OAAAA,KAMJxB,cAAgB,SAACyB,GAAuC,IAAnB5B,EAAkB,uDAAP,GAC9C,EAAKjD,MAAM8E,SAASD,EAAY5B,IACjC,EAmBA,OAnBA,yCAND,WACE8B,KAAK/E,MAAM8E,SAASC,KAAK/E,MAAMmE,kBAAmBY,KAAK/E,MAAMiD,YAC9D,oBAMD,WAEE,OACE,gCAAG8B,KAAK/E,MAAM2E,WAAY,SAACK,EAAA,EAAD,IAAe,MACvC,SAACpB,EAAD,CACEE,YAAaiB,KAAK/E,MAAM8D,YACxBK,kBAAmBY,KAAK/E,MAAMmE,kBAC9BlB,SAAU8B,KAAK/E,MAAMiD,SACrBD,eAAgB+B,KAAK/E,MAAMgD,eAC3BL,UAAWoC,KAAK/E,MAAM2C,UACtBD,UAAWqC,KAAK/E,MAAM0C,UACtBuC,eAAgBF,KAAK/E,MAAMiF,eAC3BC,kBAAmBH,KAAK/E,MAAMkF,kBAC9B9B,cAAe2B,KAAK3B,uBAI3B,EA3BGwB,CAAyBO,EAAAA,WAgE/B,GAAeC,EAAAA,EAAAA,KACbC,EAAAA,EAAAA,KAnCsB,SAAChB,GACvB,MAAO,CACLP,YAAaM,EAAeC,GAC5BpB,SAAUsB,EAAYF,GACtBF,kBAAmBK,EAAqBH,GACxCrB,eAAgByB,EAAkBJ,GAClCM,UAAWD,EAAaL,OAID,SAACjE,GAC1B,MAAO,CAELuC,UAAW,SAACnC,GACVJ,GAASkF,EAAAA,EAAAA,IAAU9E,KAGrBkC,UAAW,SAAClC,GACVJ,GAASmF,EAAAA,EAAAA,IAAU/E,KAGrByE,eAAgB,SAACd,GACf/D,GAASoF,EAAAA,EAAAA,IAAuBrB,KAGlCe,kBAAmB,SAAClC,GAClB5C,GAASqF,EAAAA,EAAAA,IAAoBzC,KAG/B8B,SAAU,SAACX,EAA2BlB,GACpC7C,GAAUsF,EAAAA,EAAAA,IAAWvB,EAAmBlB,SAI9C,CAEE2B","sources":["webpack://samurai-way/./src/components/Friends/Friends.module.css?cf9f","webpack://samurai-way/./src/components/Friends/CardFriend/CardFriend.module.css?07e4","webpack://samurai-way/./src/components/Friends/ModalMessage/ModalMessage.module.css?020e","components/Friends/ModalMessage/ModalMessage.tsx","components/Friends/CardFriend/CardFriend.tsx","components/Friends/Pagination/Pagination.tsx","components/Friends/Friends.tsx","Redux/friends-selectors.ts","components/Friends/FriendsContainer.tsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"row\":\"Friends_row__1y6wd\",\"card\":\"Friends_card__-e9XH\",\"friends__image\":\"Friends_friends__image__hzCt6\",\"icon\":\"Friends_icon__9fksz\",\"link\":\"Friends_link__ZqGTc\",\"friends__content\":\"Friends_friends__content__h3eUJ\",\"friends__info\":\"Friends_friends__info__uRAFn\",\"text\":\"Friends_text__xV84v\",\"statistics\":\"Friends_statistics__dHhpX\",\"item_number\":\"Friends_item_number__AakVH\",\"item_text\":\"Friends_item_text__yjp2M\",\"button_group\":\"Friends_button_group__9x++Z\",\"pagination\":\"Friends_pagination__psdIP\",\"selectedPage\":\"Friends_selectedPage__UFP5S\"};","// extracted by mini-css-extract-plugin\nexport default {\"card\":\"CardFriend_card__Ne4Le\",\"friends__image\":\"CardFriend_friends__image__Gvwl-\",\"icon\":\"CardFriend_icon__161eF\",\"link\":\"CardFriend_link__qFNaN\",\"friends__content\":\"CardFriend_friends__content__2jko4\",\"friends__info\":\"CardFriend_friends__info__WYVk5\",\"text\":\"CardFriend_text__PO4Px\",\"statistics\":\"CardFriend_statistics__hxRCA\",\"item_number\":\"CardFriend_item_number__Tdbx3\",\"item_text\":\"CardFriend_item_text__sNQXs\",\"button_group\":\"CardFriend_button_group__QIAnf\"};","// extracted by mini-css-extract-plugin\nexport default {\"modal\":\"ModalMessage_modal__UDeqV\",\"modal__dialog\":\"ModalMessage_modal__dialog__ejba+\",\"modal__content\":\"ModalMessage_modal__content__bTV+A\",\"modal__header\":\"ModalMessage_modal__header__UBWf7\",\"modal__title\":\"ModalMessage_modal__title__XbkR+\",\"form\":\"ModalMessage_form__BoqaF\",\"btn__box\":\"ModalMessage_btn__box__kUMKa\",\"file_attachment_btn\":\"ModalMessage_file_attachment_btn__kD+we\",\"emoji_btn\":\"ModalMessage_emoji_btn__EhVn+\",\"form__control\":\"ModalMessage_form__control__Cs7Pk\",\"send__btn\":\"ModalMessage_send__btn__hDZCB\",\"close\":\"ModalMessage_close__ijL02\"};","import React, {ChangeEvent, useState} from \"react\";\r\nimport classes from './ModalMessage.module.css';\r\nimport {NavLink} from \"react-router-dom\";\r\nimport {addMessageTC} from \"../../../Redux/dialogsPageReducer\";\r\nimport {useDispatch} from \"react-redux\";\r\n\r\ntype ModalMessagePropsType = {\r\n  closeModal: () => void\r\n  id: number\r\n}\r\n\r\nexport const ModalMessage = (props: ModalMessagePropsType) => {\r\n  const [value, setValue] = useState<string>('')\r\n  const dispatch = useDispatch()\r\n  const onClickCloseMenuHandler = () => {\r\n    props.closeModal()\r\n  }\r\n  const onChangeHandler = (e: ChangeEvent<HTMLTextAreaElement>) => {\r\n    setValue(e.currentTarget.value)\r\n  }\r\n  const onClickHandler = (id: number) => {\r\n    dispatch(addMessageTC(id, value))\r\n    console.log(id, value)\r\n  }\r\n  return (\r\n    <div className={classes.container}>\r\n      <div id=\"openModal\" className={classes.modal}>\r\n        <div className={classes.modal__dialog}>\r\n          <div className={classes.modal__content}>\r\n            <div className={classes.modal__header}>\r\n              <h3 className={classes.modal__title}>Enter Your Message</h3>\r\n              <NavLink onClick={onClickCloseMenuHandler} to=\"/friends\" title=\"Close\"\r\n                       className={classes.close}>Ã—</NavLink>\r\n            </div>\r\n            <form className={classes.form}>\r\n              <textarea onChange={onChangeHandler} value={value} className={classes.form__control}\r\n                        placeholder=\"Type your message...\"/>\r\n              <div className={classes.btn__box}>\r\n                <button className={classes.file_attachment_btn} type=\"button\">\r\n                  <svg xmlns=\"http://www.w3.org/2000/svg\" id=\"Outline\" viewBox=\"0 0 24 24\" width=\"20\" height=\"20\"\r\n                       fill='#6B7C8F'>\r\n                    <path\r\n                      d=\"M22.95,9.6a1,1,0,0,0-1.414,0L10.644,20.539a5,5,0,1,1-7.072-7.071L14.121,2.876a3,3,0,0,1,4.243,4.242L7.815,17.71a1.022,1.022,0,0,1-1.414,0,1,1,0,0,1,0-1.414l9.392-9.435a1,1,0,0,0-1.414-1.414L4.987,14.882a3,3,0,0,0,0,4.243,3.073,3.073,0,0,0,4.243,0L19.778,8.532a5,5,0,0,0-7.071-7.07L2.158,12.054a7,7,0,0,0,9.9,9.9L22.95,11.018A1,1,0,0,0,22.95,9.6Z\"/>\r\n                  </svg>\r\n                </button>\r\n                <button className={classes.emoji_btn} type=\"button\">\r\n                  <svg xmlns=\"http://www.w3.org/2000/svg\" id=\"Layer_1\" data-name=\"Layer 1\" viewBox=\"0 0 24 24\"\r\n                       width=\"20\"\r\n                       height=\"20\" fill='#6B7C8F'>\r\n                    <path\r\n                      d=\"M12,24A12,12,0,1,1,24,12,12.013,12.013,0,0,1,12,24ZM12,2A10,10,0,1,0,22,12,10.011,10.011,0,0,0,12,2Zm5.666,13.746a1,1,0,0,0-1.33-1.494A7.508,7.508,0,0,1,12,16a7.509,7.509,0,0,1-4.334-1.746,1,1,0,0,0-1.332,1.492A9.454,9.454,0,0,0,12,18,9.454,9.454,0,0,0,17.666,15.746ZM6,10c0,1,.895,1,2,1s2,0,2-1a2,2,0,0,0-4,0Zm8,0c0,1,.895,1,2,1s2,0,2-1a2,2,0,0,0-4,0Z\"/>\r\n                  </svg>\r\n                </button>\r\n                <button className={classes.send__btn} onClick={() => onClickHandler(props.id)}>Send</button>\r\n              </div>\r\n            </form>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}","import React, {useEffect, useState} from 'react';\r\nimport classes from \"./CardFriend.module.css\";\r\nimport {NavLink} from \"react-router-dom\";\r\nimport {ModalMessage} from \"../ModalMessage/ModalMessage\";\r\n\r\n\r\ntype propsCardSrc = {\r\n  followed: boolean\r\n  user_name: string,\r\n  user_avatar: {\r\n    \"small\": string | undefined,\r\n    \"large\": string | undefined\r\n  }\r\n  addFriend: (id: number) => void\r\n  delFriend: (id: number) => void\r\n  id: number,\r\n}\r\nconst DELAY = 500;\r\ntype SetTimeoutType = ReturnType<typeof setTimeout>\r\nconst CardFriend = (props: propsCardSrc) => {\r\n  const [isDisabled, setIsDisabled] = useState<boolean>(false);\r\n  const [openModal, setOpenModal] = useState<boolean>(false)\r\n  useEffect(() => {\r\n    let timeoutId: SetTimeoutType = setTimeout((): void => {\r\n      setIsDisabled(false);\r\n    }, DELAY);\r\n\r\n    return () => clearTimeout(timeoutId);\r\n  }, [isDisabled]);\r\n  const onClickAddFriendHandler = () => {\r\n    setIsDisabled(true)\r\n    props.addFriend(props.id)\r\n  }\r\n  const onClickDelFriendHandler = () => {\r\n    setIsDisabled(true)\r\n    props.delFriend(props.id)\r\n  }\r\n  const closeModal = () => {\r\n    setOpenModal(!openModal)\r\n  }\r\n  const openModalHandler = () => {\r\n    setOpenModal(!openModal)\r\n  }\r\n  return (\r\n    <>\r\n      {openModal && <ModalMessage closeModal={closeModal} id={props.id}/>}\r\n      <div className={classes.card}>\r\n        <div className={classes.friends__image}>\r\n          <NavLink to=\"#\">\r\n            <img src='https://templates.envytheme.com/zust/default/assets/images/friends/friends-bg-1.jpg'\r\n                 alt=\"img_bg\"/>\r\n          </NavLink>\r\n          <div className={classes.icon}>\r\n            <NavLink className={classes.link} to=\"#\">\r\n              <svg height=\"20\" viewBox=\"0 0 24 24\" width=\"20\"\r\n                   xmlns=\"http://www.w3.org/2000/svg\"\r\n                   fill='grey'>\r\n                <path\r\n                  d=\"m7.5 13a4.5 4.5 0 1 1 4.5-4.5 4.505 4.505 0 0 1 -4.5 4.5zm0-7a2.5 2.5 0 1 0 2.5 2.5 2.5 2.5 0 0 0 -2.5-2.5zm7.5 17v-.5a7.5 7.5 0 0 0 -15 0v.5a1 1 0 0 0 2 0v-.5a5.5 5.5 0 0 1 11 0v.5a1 1 0 0 0 2 0zm9-5a7 7 0 0 0 -11.667-5.217 1 1 0 1 0 1.334 1.49 5 5 0 0 1 8.333 3.727 1 1 0 0 0 2 0zm-6.5-9a4.5 4.5 0 1 1 4.5-4.5 4.505 4.505 0 0 1 -4.5 4.5zm0-7a2.5 2.5 0 1 0 2.5 2.5 2.5 2.5 0 0 0 -2.5-2.5z\"/>\r\n              </svg>\r\n            </NavLink>\r\n          </div>\r\n        </div>\r\n        <div className={classes.friends__content}>\r\n          <div className={classes.friends__info}>\r\n            <NavLink to={`profile/${props.id}`}>\r\n              <img\r\n                src={props.user_avatar.small ? props.user_avatar.small : 'https://templates.envytheme.com/zust/default/assets/images/friends/friends-1.jpg'}\r\n                alt=\"img_card\"/>\r\n            </NavLink>\r\n            <div className={classes.text}>\r\n              <h3><NavLink to=\"#\">{props.user_name}</NavLink></h3>\r\n              <span>10 Mutual Friends</span>\r\n            </div>\r\n          </div>\r\n          <ul className={classes.statistics}>\r\n            <li>\r\n              <NavLink to=\"#\">\r\n                <span className={classes.item_number}>862</span>\r\n                <span className={classes.item_text}>Likes</span>\r\n              </NavLink>\r\n            </li>\r\n            <li>\r\n              <NavLink to=\"#\">\r\n                <span className={classes.item_number}>91</span>\r\n                <span className={classes.item_text}>Following</span>\r\n              </NavLink>\r\n            </li>\r\n            <li>\r\n              <NavLink to=\"#\">\r\n                <span className={classes.item_number}>514</span>\r\n                <span className={classes.item_text}>Followers</span>\r\n              </NavLink>\r\n            </li>\r\n          </ul>\r\n          <div className={classes.button_group}>\r\n            <div className={classes.add_friend_btn}>\r\n              {props.followed ?\r\n                <button disabled={isDisabled} onClick={onClickDelFriendHandler} type=\"submit\">Delete Friend</button> :\r\n                <button disabled={isDisabled} onClick={onClickAddFriendHandler} type=\"submit\">Add Friend</button>}\r\n            </div>\r\n            <div className={classes.send_message_btn}>\r\n              <button onClick={openModalHandler} type=\"submit\">Send Message</button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </>\r\n  )\r\n}\r\nexport default CardFriend;","import React from 'react';\r\nimport {Pagination} from 'antd';\r\n\r\ntype PaginationPropsType = {\r\n  totalUserCount: number\r\n  pageSize: number\r\n  onChangedPage: (pageNumber: number, pageSize: number) => void\r\n  currentPageNumber: number\r\n}\r\nexport const PaginationItems = (props: PaginationPropsType) => {\r\n  let pagesCount = Math.ceil(props.totalUserCount / props.pageSize)\r\n  // let pages = []\r\n  // for (let i = 1; i < pagesCount; i++) {\r\n  //   pages.push(i)\r\n  // }\r\n\r\n  const onChangePageNumber = (page: number, pageSize: number) => {\r\n    props.onChangedPage(page, pageSize)\r\n  }\r\n  return (\r\n    <Pagination defaultPageSize={12} pageSizeOptions={[12, 24, 48, 96]}\r\n                onChange={(page, pageSize) => onChangePageNumber(page, pageSize)}\r\n                defaultCurrent={1}\r\n                total={pagesCount} onShowSizeChange={(current, size) => onChangePageNumber(current, size)}/>\r\n    // <div className={classes.pagination}>\r\n    //   {pages.map(p => {\r\n    //     return <span onClick={() => {\r\n    //       props.onChangedPage(p)\r\n    //     }}\r\n    //                  className={props.currentPageNumber === p ? classes.selectedPage : ''}\r\n    //                  key={p.toString()}>{p}</span>\r\n    //   })}\r\n    // </div>\r\n  );\r\n};\r\n\r\n","import React from 'react';\r\nimport classes from './Friends.module.css'\r\nimport CardFriend from './CardFriend/CardFriend';\r\nimport {UserStateType} from \"../../Redux/friendsPageReducer\";\r\nimport {PaginationItems} from \"./Pagination/Pagination\";\r\n\r\n\r\nexport type cardFriendsPropsType = {\r\n  cardFriends: Array<UserStateType>\r\n  pageSize: number\r\n  currentPageNumber: number\r\n  totalUserCount: number\r\n  addFriend: (id: number) => void\r\n  delFriend: (id: number) => void\r\n  // openModal: (id: number) => void\r\n  // closeModal: (id: number) => void\r\n  setCurrentPage: (pageNumber: number) => void\r\n  setTotalUserCount: (totalUserCount: number) => void\r\n  onChangedPage: (pageNumber: number) => void\r\n}\r\n\r\nexport function Friends(props: cardFriendsPropsType) {\r\n  let Cards = props.cardFriends.map(item => <CardFriend key={item.id} addFriend={props.addFriend}\r\n                                                        delFriend={props.delFriend}\r\n                                                        user_avatar={item.photos}\r\n                                                        user_name={item.name} id={item.id}\r\n                                                        followed={item.followed}/>)\r\n  return (\r\n    <>\r\n      <PaginationItems totalUserCount={props.totalUserCount} pageSize={props.pageSize}\r\n                       onChangedPage={props.onChangedPage}\r\n                       currentPageNumber={props.currentPageNumber}/>\r\n      <div className={classes.list}>\r\n        <div className={classes.row}>\r\n          {Cards}\r\n        </div>\r\n      </div>\r\n    </>\r\n  )\r\n}\r\n","import {AppStateType} from \"./redux-store\";\r\n\r\nexport const getCardFriends = (state: AppStateType) => {\r\n  return state.FriendsPage.cardFriends\r\n}\r\nexport const getPageSize = (state: AppStateType) => {\r\n  return state.FriendsPage.pageSize\r\n}\r\nexport const getCurrentPageNumber = (state: AppStateType) => {\r\n  return state.FriendsPage.currentPageNumber\r\n}\r\nexport const getTotalUserCount = (state: AppStateType) => {\r\n  return state.FriendsPage.totalUserCount\r\n}\r\nexport const getPreloader = (state: AppStateType) => {\r\n  return state.FriendsPage.preloader\r\n}","import {connect} from \"react-redux\";\r\nimport {Friends} from \"./Friends\";\r\nimport {AppStateType, TypedDispatch} from \"../../Redux/redux-store\";\r\nimport React from \"react\";\r\nimport {Preloader} from \"../../common/preloader/Preloader\";\r\nimport {\r\n  addUserTC,\r\n  delUserTC,\r\n  getUsersTC,\r\n  setCurrentPageNumberAC,\r\n  setTotalUserCountAC,\r\n  UserStateType\r\n} from \"../../Redux/friendsPageReducer\";\r\nimport {compose} from \"redux\";\r\nimport {\r\n  getCardFriends,\r\n  getCurrentPageNumber,\r\n  getPageSize,\r\n  getPreloader,\r\n  getTotalUserCount\r\n} from \"../../Redux/friends-selectors\";\r\n\r\ntype mapStateToPropsType = {\r\n  cardFriends: Array<UserStateType>\r\n  currentPageNumber: number\r\n  pageSize: number\r\n  totalUserCount: number\r\n  preloader: boolean\r\n}\r\ntype mapDispatchToPropsType = {\r\n  addFriend: (id: number) => void\r\n  delFriend: (id: number) => void\r\n  setCurrentPage: (currentPageNumber: number) => void\r\n  setTotalUserCount: (totalUserCount: number) => void\r\n  getUsers: (currentPageNumber: number, pageSize: number) => void\r\n}\r\ntype FriendsContainerType = mapStateToPropsType & mapDispatchToPropsType\r\n\r\nclass FriendsContainer extends React.Component<FriendsContainerType> {\r\n\r\n  componentDidMount() {\r\n    this.props.getUsers(this.props.currentPageNumber, this.props.pageSize)\r\n  }\r\n\r\n  onChangedPage = (pageNumber: number, pageSize = 12) => {\r\n    this.props.getUsers(pageNumber, pageSize)\r\n  }\r\n\r\n  render() {\r\n\r\n    return (\r\n      <>{this.props.preloader ? <Preloader/> : null}\r\n        <Friends\r\n          cardFriends={this.props.cardFriends}\r\n          currentPageNumber={this.props.currentPageNumber}\r\n          pageSize={this.props.pageSize}\r\n          totalUserCount={this.props.totalUserCount}\r\n          addFriend={this.props.addFriend}\r\n          delFriend={this.props.delFriend}\r\n          setCurrentPage={this.props.setCurrentPage}\r\n          setTotalUserCount={this.props.setTotalUserCount}\r\n          onChangedPage={this.onChangedPage}\r\n        />\r\n      </>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state: AppStateType): mapStateToPropsType => {\r\n  return {\r\n    cardFriends: getCardFriends(state),\r\n    pageSize: getPageSize(state),\r\n    currentPageNumber: getCurrentPageNumber(state),\r\n    totalUserCount: getTotalUserCount(state),\r\n    preloader: getPreloader(state),\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch: TypedDispatch): mapDispatchToPropsType => {\r\n  return {\r\n\r\n    addFriend: (id: number) => {\r\n      dispatch(addUserTC(id))\r\n    },\r\n\r\n    delFriend: (id: number) => {\r\n      dispatch(delUserTC(id))\r\n    },\r\n\r\n    setCurrentPage: (currentPageNumber: number) => {\r\n      dispatch(setCurrentPageNumberAC(currentPageNumber))\r\n    },\r\n\r\n    setTotalUserCount: (totalUserCount: number) => {\r\n      dispatch(setTotalUserCountAC(totalUserCount))\r\n    },\r\n\r\n    getUsers: (currentPageNumber: number, pageSize: number) => {\r\n      dispatch((getUsersTC(currentPageNumber, pageSize)))\r\n    },\r\n  }\r\n}\r\nexport default compose<React.ComponentType>(\r\n  connect(mapStateToProps, mapDispatchToProps),\r\n)(FriendsContainer)\r\n"],"names":["ModalMessage","props","useState","value","setValue","dispatch","useDispatch","className","classes","id","onClick","closeModal","to","title","onChange","e","currentTarget","placeholder","type","xmlns","viewBox","width","height","fill","d","addMessageTC","console","log","isDisabled","setIsDisabled","openModal","setOpenModal","useEffect","timeoutId","setTimeout","clearTimeout","src","alt","user_avatar","small","user_name","followed","disabled","delFriend","addFriend","PaginationItems","pagesCount","Math","ceil","totalUserCount","pageSize","onChangePageNumber","page","onChangedPage","defaultPageSize","pageSizeOptions","defaultCurrent","total","onShowSizeChange","current","size","Friends","Cards","cardFriends","map","item","photos","name","currentPageNumber","getCardFriends","state","FriendsPage","getPageSize","getCurrentPageNumber","getTotalUserCount","getPreloader","preloader","FriendsContainer","pageNumber","getUsers","this","Preloader","setCurrentPage","setTotalUserCount","React","compose","connect","addUserTC","delUserTC","setCurrentPageNumberAC","setTotalUserCountAC","getUsersTC"],"sourceRoot":""}